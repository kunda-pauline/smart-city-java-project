
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class HOMEPAGE extends javax.swing.JFrame {

    /**
     * Creates new form HOMEPAGE
     */
    public HOMEPAGE() {
        initComponents();
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        container = new javax.swing.JPanel();
        hospital = new javax.swing.JRadioButton();
        restourant = new javax.swing.JRadioButton();
        hotel = new javax.swing.JRadioButton();
        market = new javax.swing.JRadioButton();
        school = new javax.swing.JRadioButton();
        church = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        searchfield = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        refresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtcomment = new javax.swing.JTextArea();
        comment = new javax.swing.JButton();
        photo1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 102, 102)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(102, 102, 255));
        header.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 3, 5, new java.awt.Color(0, 102, 102)));
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 204));
        jLabel1.setText("SMART CITY  GUIDE");
        header.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 480, 50));

        logout.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(0, 153, 153));
        logout.setText("LOGOUT");
        logout.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 102, 102)));
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        header.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 10, 100, 40));

        jPanel2.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 60));

        container.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 102, 102)));

        hospital.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        hospital.setText("Hospital");
        hospital.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        hospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalActionPerformed(evt);
            }
        });
        container.add(hospital);

        restourant.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        restourant.setText("Restourant");
        restourant.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        restourant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restourantActionPerformed(evt);
            }
        });
        container.add(restourant);

        hotel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        hotel.setText("Hotel");
        hotel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        hotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelActionPerformed(evt);
            }
        });
        container.add(hotel);

        market.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        market.setText("Market");
        market.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        market.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketActionPerformed(evt);
            }
        });
        container.add(market);

        school.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        school.setText("Schools");
        school.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        school.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolActionPerformed(evt);
            }
        });
        container.add(school);

        church.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        church.setText("Church");
        church.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        church.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                churchActionPerformed(evt);
            }
        });
        container.add(church);

        jPanel2.add(container, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1370, 40));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("  ENTER  NAME , LOCATION OR CATEGORY");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 410, 30));

        searchfield.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchfield.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 51, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255))));
        searchfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchfieldActionPerformed(evt);
            }
        });
        jPanel2.add(searchfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 260, 30));

        search.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        search.setForeground(new java.awt.Color(0, 51, 204));
        search.setText("SEARCH");
        search.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 3), new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 255), 3, true)));
        search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel2.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 110, 60, 30));

        table1.setAutoCreateRowSorter(true);
        table1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "CATEGORY", "LOCATION", "ADDRESS", "CONTACT", "WEBSITE", "IMAGE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Byte.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table1.setAlignmentX(10.0F);
        table1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        table1.setGridColor(new java.awt.Color(0, 102, 102));
        table1.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);
        table1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (table1.getColumnModel().getColumnCount() > 0) {
            table1.getColumnModel().getColumn(0).setMinWidth(30);
            table1.getColumnModel().getColumn(0).setMaxWidth(70);
            table1.getColumnModel().getColumn(0).setHeaderValue("ID");
            table1.getColumnModel().getColumn(1).setHeaderValue("NAME");
            table1.getColumnModel().getColumn(2).setHeaderValue("CATEGORY");
            table1.getColumnModel().getColumn(3).setHeaderValue("LOCATION");
            table1.getColumnModel().getColumn(4).setHeaderValue("ADDRESS");
            table1.getColumnModel().getColumn(5).setHeaderValue("CONTACT");
            table1.getColumnModel().getColumn(6).setHeaderValue("WEBSITE");
            table1.getColumnModel().getColumn(7).setHeaderValue("IMAGE");
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 940, 520));

        refresh.setBackground(new java.awt.Color(0, 102, 102));
        refresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refresh.setText("Refresh");
        refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel2.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 90, -1));

        txtcomment.setColumns(20);
        txtcomment.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtcomment.setRows(5);
        txtcomment.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 2, 3, new java.awt.Color(0, 102, 102)));
        jScrollPane2.setViewportView(txtcomment);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 560, 350, 80));

        comment.setBackground(new java.awt.Color(0, 102, 102));
        comment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        comment.setText("comment");
        comment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentActionPerformed(evt);
            }
        });
        jPanel2.add(comment, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 640, -1, -1));

        photo1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 102, 102)));
        jPanel2.add(photo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 180, 380, 350));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setText("IMAGE");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 160, 60, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 1000));

        pack();
    }// </editor-fold>//GEN-END:initComponents
  Connection con ;
   Statement stm;
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
     
  login logout=new login();
  logout.setVisible(true);
  this.hide();
    }//GEN-LAST:event_logoutActionPerformed

    private void hotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelActionPerformed
    if(hotel.isSelected())
  hospital.setSelected(false);
school.setSelected(false);
market.setSelected(false);
church.setSelected(false);
restourant.setSelected(false);        // TODO add your handling code here:
    }//GEN-LAST:event_hotelActionPerformed

    private void restourantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restourantActionPerformed
if(restourant.isSelected())
church.setSelected(false);  
school.setSelected(false);
market.setSelected(false);
hotel.setSelected(false);
hospital.setSelected(false);     
// TODO add your handling code here:
    }//GEN-LAST:event_restourantActionPerformed

    private void searchfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchfieldActionPerformed

    private void hospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalActionPerformed

if(hospital.isSelected())
    
school.setSelected(false);
market.setSelected(false);
hotel.setSelected(false);
restourant.setSelected(false);
church.setSelected(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalActionPerformed

    private void marketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketActionPerformed
if(market.isSelected())
    
school.setSelected(false);
restourant.setSelected(false);
hotel.setSelected(false);
hospital.setSelected(false);
church.setSelected(false); 
// TODO add your handling code here:
    }//GEN-LAST:event_marketActionPerformed

    private void schoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolActionPerformed
if(school.isSelected())

market.setSelected(false);
restourant.setSelected(false);
hotel.setSelected(false);
hospital.setSelected(false);
church.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_schoolActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

       String seach=searchfield.getText();
       if ("".equals(seach))
       { JOptionPane.showMessageDialog(this," NO SEARCHING DETAILS "); }
     
       
       else if(hospital.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from hospital where location='"+seach+"' or name='"+seach+"' or category='"+seach+"'";
               ResultSet rs=stm.executeQuery(sql);
               
               while(rs.next()){
                   
                   String id= String.valueOf(rs.getInt("id"));
                   String username= rs.getString("name");
                   String category= rs.getString("category");
                   String location= rs.getString("location");
                   String address= rs.getString("address");
                   String contact= rs.getString("contact");
                   String website= rs.getString("website");
                   String photo= rs.getString("photo");
                
                   
                   
                   String login[]={id,username,category,location,address,contact,website,photo};
                   DefaultTableModel tblModel=(DefaultTableModel) table1.getModel();
                   tblModel.addRow(login);
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       
       else if(restourant.isSelected()){
        try
       {
            Class.forName("com.mysql.jdbc.Driver");
                 con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
                stm=con.createStatement();
                String sql="select *from restourant where location='"+seach+"' or name='"+seach+"' or category='"+seach+"'";
                ResultSet rs=stm.executeQuery(sql);
                
                while(rs.next()){
                  String id= String.valueOf(rs.getInt("id"));
                   String username= rs.getString("name");
                   String category= rs.getString("category");
                   String location= rs.getString("location");
                   String address= rs.getString("address");
                   String contact= rs.getString("contact");
                   String website= rs.getString("website");
                   String photo= rs.getString("photo");
                
                   
                   
                   String login[]={id,username,category,location,address,contact,website,photo};
                   DefaultTableModel tblModel=(DefaultTableModel) table1.getModel();
                   tblModel.addRow(login);
                
            }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}}
       else if(market.isSelected()){
        try
       {
            Class.forName("com.mysql.jdbc.Driver");
                 con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
                 stm=con.createStatement();
                String sql="select *from market where location='"+seach+"' or name='"+seach+"' or category='"+seach+"'";
                ResultSet rs=stm.executeQuery(sql);
                
                while(rs.next()){
                    
                   String id= String.valueOf(rs.getInt("id"));
                   String username= rs.getString("name");
                   String category= rs.getString("category");
                   String location= rs.getString("location");
                   String address= rs.getString("address");
                   String contact= rs.getString("contact");
                   String website= rs.getString("website");
                   String photo= rs.getString("photo");
                
                   
                   
                   String login[]={id,username,category,location,address,contact,website,photo};
                   DefaultTableModel tblModel=(DefaultTableModel) table1.getModel();
                   tblModel.addRow(login);
               
            }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}}
       
       else if(hotel.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select *from hotel where location='"+seach+"' or name='"+seach+"' or category='"+seach+"'";
               ResultSet rs=stm.executeQuery(sql);
               
               while(rs.next()){
                    String id= String.valueOf(rs.getInt("id"));
                   String username= rs.getString("name");
                   String category= rs.getString("category");
                   String location= rs.getString("location");
                   String address= rs.getString("address");
                   String contact= rs.getString("contact");
                   String website= rs.getString("website");
                   String photo= rs.getString("photo");
                  
     
                   String login[]={id,username,category,location,address,contact,website,photo};
                   DefaultTableModel tblModel=(DefaultTableModel) table1.getModel();
                   tblModel.addRow(login);
           }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       
       else if(church.isSelected()){
        try
       {
            Class.forName("com.mysql.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
                 stm=con.createStatement();
                String sql="select *from church where location='"+seach+"' or name='"+seach+"' or category='"+seach+"'";
                ResultSet rs=stm.executeQuery(sql);
                
                while(rs.next()){
                    
                   String id= String.valueOf(rs.getInt("id"));
                   String username= rs.getString("name");
                   String category= rs.getString("category");
                   String location= rs.getString("location");
                   String address= rs.getString("address");
                   String contact= rs.getString("contact");
                   String website= rs.getString("website");
                   String photo= rs.getString("photo");
               
                   
                   
                   String login[]={id,username,category,location,address,contact,website,photo};
                   DefaultTableModel tblModel=(DefaultTableModel) table1.getModel();
                   tblModel.addRow(login);
                }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}}
       
       //
       
       else if(school.isSelected()){
        try
       {
            Class.forName("com.mysql.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
             stm=con.createStatement();
                String sql="select *from school where location='"+seach+"' or name='"+seach+"' or category='"+seach+"'";
                ResultSet rs=stm.executeQuery(sql);
                
                while(rs.next()){
                   String id= String.valueOf(rs.getInt("id"));
                   String username= rs.getString("name");
                   String category= rs.getString("category");
                   String location= rs.getString("location");
                   String address= rs.getString("address");
                   String contact= rs.getString("contact");
                   String website= rs.getString("website");
                   String photo= rs.getString("photo");
                 
                   
                   
                   String login[]={id,username,category,location,address,contact,website,photo};
                   DefaultTableModel tblModel=(DefaultTableModel) table1.getModel();
                   tblModel.addRow(login);
                }
            }
       
        catch(ClassNotFoundException | SQLException e){
       
            System.out.println(e.getMessage());}
        
       } else
       {JOptionPane.showMessageDialog(this," Choose option above first"); }
   
    }//GEN-LAST:event_searchActionPerformed

    private void churchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_churchActionPerformed
       
        if(church.isSelected())
        market.setSelected(false);
        restourant.setSelected(false);
        hotel.setSelected(false);
        hospital.setSelected(false);
        school.setSelected(false);     
       
    }//GEN-LAST:event_churchActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        table1.setModel(new DefaultTableModel(null,new String[]{"ID","NAME","CATEGORY","LOCATION","ADDRESS",
            "CONTACT","WEBSITE","IMAGE"}));

photo1.setIcon(null);
    }//GEN-LAST:event_refreshActionPerformed

    private void commentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentActionPerformed
        // TODO add your handling code here:
        String comments=txtcomment.getText();
        
        if("".equals(comments))
        {
            JOptionPane.showMessageDialog(this, "add your comment first ");   
        }
        else{
        try{
        Class.forName("com.mysql.jdbc.Driver");
        con=DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
        PreparedStatement insert=con.prepareStatement("insert into comments(comment)values(?)");
        
        insert.setString(1,comments);
        insert.executeUpdate();
        
        
        JOptionPane.showMessageDialog(this, "Comment submited "); 
          txtcomment.setText(null);
        }
        
        catch(ClassNotFoundException e){
            System.out.println(e.getMessage());} catch (SQLException ex) {
            Logger.getLogger(HOMEPAGE.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
       
          
    }//GEN-LAST:event_commentActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
     
        DefaultTableModel df=(DefaultTableModel)table1.getModel();
        int selectindex=table1.getSelectedRow();
        int id=Integer.parseInt(df.getValueAt(selectindex, 0).toString());       
        
       
       if(hospital.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from hospital where id='"+id+"'";
                
               ResultSet rs=stm.executeQuery(sql);
               
               if(rs.next()){
            
            byte[] img=rs.getBytes("photo");
            
               ImageIcon image= new ImageIcon(img);
               Image im=image.getImage();
               Image myimage=im.getScaledInstance(photo1.getWidth(),photo1.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon newimage= new ImageIcon(myimage);
                
               photo1.setIcon(newimage);
              
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       else if(restourant.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from restourant where id='"+id+"'";
                
               ResultSet rs=stm.executeQuery(sql);
               
               if(rs.next()){
            
            byte[] img=rs.getBytes("photo");
            
               ImageIcon image= new ImageIcon(img);
               Image im=image.getImage();
               Image myimage=im.getScaledInstance(photo1.getWidth(),photo1.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon newimage= new ImageIcon(myimage);
                
               photo1.setIcon(newimage);
              
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       else if(hotel.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from hotel where id='"+id+"'";
                
               ResultSet rs=stm.executeQuery(sql);
               
               if(rs.next()){
            
            byte[] img=rs.getBytes("photo");
            
               ImageIcon image= new ImageIcon(img);
               Image im=image.getImage();
               Image myimage=im.getScaledInstance(photo1.getWidth(),photo1.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon newimage= new ImageIcon(myimage);
                
               photo1.setIcon(newimage);
              
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       else if(market.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from market where id='"+id+"'";
                
               ResultSet rs=stm.executeQuery(sql);
               
               if(rs.next()){
            
            byte[] img=rs.getBytes("photo");
            
               ImageIcon image= new ImageIcon(img);
               Image im=image.getImage();
               Image myimage=im.getScaledInstance(photo1.getWidth(),photo1.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon newimage= new ImageIcon(myimage);
                
               photo1.setIcon(newimage);
              
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       else if(school.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from school where id='"+id+"'";
                
               ResultSet rs=stm.executeQuery(sql);
               
               if(rs.next()){
            
            byte[] img=rs.getBytes("photo");
            
               ImageIcon image= new ImageIcon(img);
               Image im=image.getImage();
               Image myimage=im.getScaledInstance(photo1.getWidth(),photo1.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon newimage= new ImageIcon(myimage);
                
               photo1.setIcon(newimage);
              
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
       else if(church.isSelected()){
       try
       {
            Class.forName("com.mysql.jdbc.Driver");
         con = DriverManager.getConnection("jdbc:mysql://localhost/register","root","");
            stm=con.createStatement();
               String sql="select * from church where id='"+id+"'";
                
               ResultSet rs=stm.executeQuery(sql);
               
               if(rs.next()){
            
            byte[] img=rs.getBytes("photo");
            
               ImageIcon image= new ImageIcon(img);
               Image im=image.getImage();
               Image myimage=im.getScaledInstance(photo1.getWidth(),photo1.getHeight(),Image.SCALE_SMOOTH);
               ImageIcon newimage= new ImageIcon(myimage);
                
               photo1.setIcon(newimage);
              
               }
        }
        catch(ClassNotFoundException | SQLException e){
        System.out.println(e.getMessage());}
       }
        
    }//GEN-LAST:event_table1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HOMEPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HOMEPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HOMEPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HOMEPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HOMEPAGE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton church;
    private javax.swing.JButton comment;
    private javax.swing.JPanel container;
    private javax.swing.JPanel header;
    private javax.swing.JRadioButton hospital;
    private javax.swing.JRadioButton hotel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JRadioButton market;
    private javax.swing.JLabel photo1;
    private javax.swing.JButton refresh;
    private javax.swing.JRadioButton restourant;
    private javax.swing.JRadioButton school;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTable table1;
    private javax.swing.JTextArea txtcomment;
    // End of variables declaration//GEN-END:variables

    void setDefaultCloseOperation(Object[] JFCase) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void SetVisible(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private Object tblModel() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    byte[]photo=null;
}
